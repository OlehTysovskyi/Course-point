type Course = {
    id: string;
    title: string;
    author: string;
    status: 'new' | 'update';
};

const mockCourses: Course[] = [
    { id: '1', title: '–û—Å–Ω–æ–≤–∏ React', author: '–Ü–≤–∞–Ω –Ü–≤–∞–Ω–µ–Ω–∫–æ', status: 'new' },
    { id: '2', title: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∏–π JavaScript', author: '–ú–∞—Ä—ñ—è –ü–µ—Ç—Ä–µ–Ω–∫–æ', status: 'update' },
];

export default function AdminCoursesTab({ searchTerm }: { searchTerm: string }) {
    const filtered = mockCourses.filter(course =>
        course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        course.author.toLowerCase().includes(searchTerm.toLowerCase())
    );

    return (
        <div className="space-y-4">
            {filtered.length === 0 && <p>–ö—É—Ä—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>}
            {filtered.map((course) => (
                <div key={course.id} className="border p-4 rounded flex justify-between items-center">
                    <div>
                        <p><strong>{course.title}</strong></p>
                        <p>–ê–≤—Ç–æ—Ä: {course.author}</p>
                        <p>–¢–∏–ø: {course.status === 'new' ? '–ù–æ–≤–∞ –∑–∞—è–≤–∫–∞' : '–û–Ω–æ–≤–ª–µ–Ω–Ω—è'}</p>
                    </div>
                    <div className="flex gap-2">
                        <button className="px-3 py-1 bg-green-500 text-white rounded">‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏</button>
                        <button className="px-3 py-1 bg-red-500 text-white rounded">‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏</button>
                        <button className="px-3 py-1 bg-blue-500 text-white rounded">üîé –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏</button>
                    </div>
                </div>
            ))}
        </div>
    );
}
