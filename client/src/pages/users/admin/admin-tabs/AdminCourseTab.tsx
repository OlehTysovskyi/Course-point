import { useEffect, useState } from 'react';
import {
    getAllCourses,
    updateCourse,
    Course
} from '../../../../services/courseService';
import { useNavigate } from 'react-router-dom';

export default function AdminCoursesTab({ searchTerm }: { searchTerm: string }) {
    const [courses, setCourses] = useState<Course[]>([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState<string | null>(null);
    const navigate = useNavigate();

    useEffect(() => {
        fetchCourses();
    }, []);

    const fetchCourses = async () => {
        try {
            const data = await getAllCourses();
            setCourses(data);
        } catch (err) {
            setError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫—É—Ä—Å–∏.');
            console.error(err);
        } finally {
            setLoading(false);
        }
    };

    const handleApprove = async (id: string) => {
        try {
            await updateCourse(id, { published: true });
            fetchCourses();
        } catch (err) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Å—Ö–≤–∞–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É", err);
        }
    };

    const handleReject = async (id: string) => {
        try {
            await updateCourse(id, { published: false });
            fetchCourses();
        } catch (err) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É", err);
        }
    };

    const filtered = searchTerm.trim()
        ? courses.filter(course =>
            course.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
            (course.teacher?.name?.toLowerCase() || '–Ω–µ–≤—ñ–¥–æ–º–æ').includes(searchTerm.toLowerCase())
        )
        : courses;

    if (loading) return <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>;
    if (error) return <p className="text-red-500">{error}</p>;

    return (
        <div className="space-y-4">
            {filtered.length === 0 && <p>–ö—É—Ä—Å—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.</p>}
            {filtered.map((course) => (
                <div key={course._id} className="border p-4 rounded flex justify-between items-center">
                    <div>
                        <p><strong>{course.title}</strong></p>
                        <p>–ê–≤—Ç–æ—Ä: {course.teacher?.name || '–ù–µ–≤—ñ–¥–æ–º–æ'}</p>
                        <p>–¢–∏–ø: {course.published ? '–û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–∏–π' : '–û—á—ñ–∫—É—î –Ω–∞ —Ä–æ–∑–≥–ª—è–¥'}</p>
                    </div>
                    <div className="flex gap-2">
                        {course.published ? (
                            <button
                                className="px-3 py-1 bg-red-500 text-white rounded"
                                onClick={() => handleReject(course._id)}
                            >
                                ‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏
                            </button>
                        ) : (
                            <button
                                className="px-3 py-1 bg-green-500 text-white rounded"
                                onClick={() => handleApprove(course._id)}
                            >
                                ‚úÖ –ü—Ä–∏–π–Ω—è—Ç–∏
                            </button>
                        )}

                        <button
                            className="px-3 py-1 bg-blue-500 text-white rounded"
                            onClick={() => navigate(`/teacher/edit-course/${course._id}`)}
                        >
                            üîé –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                        </button>
                    </div>
                </div>
            ))}
        </div>
    );
}
